version: '3'

volumes:
  pg_data:
  static_data:
  media_data:

# networks:
#   turanline-network:  # Define the custom network
#     driver: bridge

services:
  db:
    container_name: me-shop-postgres
    image: postgres:15.4
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  redis:
    container_name: me-shop-redis
    image: redis:alpine
    restart: always

  # me-backend-app:
  #   container_name: me-backend-app
  #   image: turanline/turanline_backend_dev:latest
  #   volumes:
  #     - static_data:/backend_static
  #     - media_data:/app/media/
  #   restart: always
  #   command: sh "./entrypoint.sh"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - redis
  #     - db
  #     - celery

  # celery:
  #   container_name: me-worker-app
  #   image: timrybakov/misexpress_celery:latest
  #   volumes:
  #     - media_data:/app/media/
  #   restart: always
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db
  #     - redis

  me-frontend-app:
    image: turanline/turanline_frontend_dev:latest
    container_name: me-frontend-app
    # depends_on:
    #   - me-backend-app
    command: sh -c "npm run start"
    restart: always
    expose:
      - "3000"
    ports:
      - "3000:3000"
    # networks:
    #   - turanline-network

  # me-frontend-partners-app:
  #   image: timrybakov/misexpress_frontend_partners:latest
  #   container_name: me-frontend-partners-app
  #   # depends_on:
  #   #   - me-backend-app
  #   command: sh -c "npm run start"
  #   restart: always
  #   expose:
  #     - "3000"
  #   ports:
  #     - "3001:3000"
  #   networks:
  #     - turanline-network

  nginx:
    image: turanline/turanline_gateway_dev:latest
    container_name: me-gateway-app
    depends_on:
      # - me-backend-app
      - me-frontend-app
      # - me-frontend-partners-app
    ports:
      - "8000:80"
    environment:
      - NGINX_HOST=tyranshop.com
    volumes:
      - static_data:/staticfiles
      - media_data:/media
      - ./nginx.test.conf:/etc/nginx/templates/default.conf.template
    restart: always
    # networks:
    #   - turanline-network

  test-container:
    image: ubuntu:latest
    container_name: ubuntu
    command: 'sleep 30000'

  test-container-2:
    image: ubuntu:latest
    container_name: ubuntu
    command: 'sleep 30000'