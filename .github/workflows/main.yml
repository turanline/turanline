name: Development workflow

on:
  push:
    branches: [ workflowtest ]
    paths-ignore:
      - '**/README.md'

env:
  NEXT_PUBLIC_URL: ${{ vars.NEXT_PUBLIC_URL }}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
      gateway: ${{ steps.changes.outputs.gateway }}
      frontend_partners: ${{ steps.changes.outputs.frontend_partners }}
      frontend_cargo: ${{ steps.changes.outputs.frontend_cargo }}
      frontend_admin: ${{ steps.changes.outputs.frontend_admin }}
      frontend_warehouse: ${{ steps.changes.outputs.frontend_warehouse }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        base: ${{ github.ref_name }}
        filters: |
          backend:
            - 'backend/**'
          frontend:
            - 'frontend/**'
          gateway:
            - 'gateway/**'
          frontend_cargo:
            - 'frontend_cargo/**'
          frontend_partners:
            - 'frontend_partners/**'
          frontend_admin:
            - 'frontend_admin/**'
          frontend_warehouse:
            - 'frontend_warehouse/**'

  # tests:
  #   name: PEP8 check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.8
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip 
  #         pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
  #         cd backend/
  #         pip install -r requirements.txt
  #     - name: Test with flake8
  #       run: |
  #         python -m flake8 backend

  backend_build_and_push:
    name: Build And Push Backend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/turanline_backend_dev:latest

  frontend_build_and_push:
    name: Build And Push Frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        env:
          NEXT_PUBLIC_URL: ${{ vars.NEXT_PUBLIC_URL }}
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create env file
        run: |
          echo "NEXT_PUBLIC_URL=${{ env.NEXT_PUBLIC_URL }}" > ./frontend/.env

      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/turanline_frontend_dev:latest
        env:
          NEXT_PUBLIC_URL: ${{ vars.NEXT_PUBLIC_URL }}

  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ needs.changes.outputs.gateway == 'true' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./gateway/
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/turanline_gateway_dev:latest